<?xml version="1.0" encoding="UTF-8"?>
<bag xmlns:boolean="http://www.w3.org/2001/XMLSchema#boolean" xmlns:exsl="http://exslt.org/common" xmlns:int="http://www.w3.org/2001/XMLSchema#int" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
 <internal>
  <id>tc3</id>
  <name>tc3.name</name>
  <shortName>tc3.name</shortName>
  <description>tc3.description</description>
  <alias>ti3</alias>
  <abbreviation>ti3</abbreviation>
  <int:schemaVersion>1</int:schemaVersion>
  <int:contentVersion>1</int:contentVersion>
  <property name="helpId">intel.che.nem.analysis_type_threading_pane_f3120</property>
  <property name="slowdown">40x-160x</property>
  <property name="memory_overhead_image">peak-t3</property>
  <property name="analysis_overhead_image">choice_3</property>
 </internal>
 <prerequisites/>
 <knobs xsl:version="1.0" exsl:keep_exsl_namespace="" syntax="norules">
  <booleanKnob id="terminate_on_deadlock" cliName="terminate-on-deadlock" displayName="knob.terminate_on_deadlock.name">
   <description>knob.terminate_on_deadlock.description</description>
   <boolean:defaultValue>false</boolean:defaultValue>
  </booleanKnob>
  <enumKnob id="stack_depth" cliName="stack-depth" displayName="knob.stack_depth.name">
   <description>knob.stack_depth.description</description>
   <values>
    <value displayName="knob.stack_depth.1">1</value>
    <value displayName="knob.stack_depth.8">8</value>
    <value displayName="knob.stack_depth.16">16</value>
    <value displayName="knob.stack_depth.24">24</value>
    <value displayName="knob.stack_depth.32">32</value>
    <defaultValue>16</defaultValue>
   </values>
  </enumKnob>
  <enumKnob id="analysis_scope" cliName="scope" displayName="knob.tcscope.name">
   <description>knob.tcscope.description</description>
   <values>
    <value displayName="knob.tcscope.l1">normal</value>
    <value displayName="knob.tcscope.l2">extreme</value>
    <defaultValue>normal</defaultValue>
   </values>
  </enumKnob>
  <booleanKnob id="remove_duplicates" cliName="remove-duplicates" displayName="knob.remove_duplicates.name">
   <description>knob.remove_duplicates.description</description>
   <boolean:defaultValue>true</boolean:defaultValue>
  </booleanKnob>
  <booleanKnob id="duplicate_elimination" cliName="duplicate-elimination" displayName="knob.duplicate_elimination.name" boolean:visible="false">
   <description>knob.duplicate_elimination.description</description>
   <boolean:defaultValue>true</boolean:defaultValue>
  </booleanKnob>
  <booleanKnob id="use_maximum_resources" cliName="use-maximum-resources" displayName="knob.use_maximum_resources.name">
   <description>knob.use_maximum_resources.description</description>
   <boolean:defaultValue>false</boolean:defaultValue>
  </booleanKnob>
 </knobs>
 <analysis xsl:version="1.0" exsl:keep_exsl_namespace="" syntax="norules">
  <collector id="runtc">
   <binaryName>runtc</binaryName>
   <boolean:collectorKnob knob="cknob_check_deadlock">true</boolean:collectorKnob>
   <collectorKnob knob="cknob_terminate_on_deadlock">
    <xsl:value-of select="exsl:ctx('terminate_on_deadlock')"/>
   </collectorKnob>
   <boolean:collectorKnob knob="cknob_check_datarace">true</boolean:collectorKnob>
   <collectorKnob knob="cknob_remove_duplicates">
    <xsl:choose>
     <xsl:when test="(exsl:ctx('duplicate_elimination')) and (exsl:ctx('remove_duplicates'))">true</xsl:when>
     <xsl:otherwise>false</xsl:otherwise>
    </xsl:choose>
   </collectorKnob>
   <boolean:collectorKnob knob="cknob_save_stack_on_allocation">true</boolean:collectorKnob>
   <collectorKnob knob="cknob_use_maximum_resources">
    <xsl:value-of select="exsl:ctx('use_maximum_resources')"/>
   </collectorKnob>
   <collectorKnob knob="cknob_stack_depth">
    <xsl:value-of select="exsl:ctx('stack_depth')"/>
   </collectorKnob>
   <collectorKnob knob="cknob_save_stack_on_first_access">
    <xsl:choose>
     <xsl:when test="exsl:ctx('stack_depth') = '1'">false</xsl:when>
     <xsl:otherwise>true</xsl:otherwise>
    </xsl:choose>
   </collectorKnob>
   <xsl:if test="exsl:ctx('analysis_scope') = 'normal'">
    <collectorKnob knob="cknob_resolution">fine</collectorKnob>
    <collectorKnob knob="cknob_check_cross_thread_stack_access">opt2</collectorKnob>
   </xsl:if>
   <xsl:if test="exsl:ctx('analysis_scope') = 'extreme'">
    <boolean:collectorKnob knob="cknob_detect_races_on_stack_access">true</boolean:collectorKnob>
    <collectorKnob knob="cknob_resolution">superfine</collectorKnob>
    <boolean:collectorKnob knob="cknob_defer_memory_check">false</boolean:collectorKnob>
    <collectorKnob knob="cknob_check_cross_thread_stack_access">opt1</collectorKnob>
   </xsl:if>
  </collector>
 </analysis>
</bag>
